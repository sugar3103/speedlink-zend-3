module.exports = {

    //pricing management global
    'pri_man.filter-type': 'Filter Type',
    'pri_man.carrier': 'Carrier',
    'pri_man.category': 'Category',
    'pri_man.service': 'Service',
    'pri_man.shipment-type': 'Shipment Type',
    'pri_man.from': 'From',
    'pri_man.to': 'To',
    'pri_man.public': 'Public',
    'pri_man.customer': 'Customer',

    //validate
    'pri_man.validate-private-empty': 'Type shouldn’t be empty',
    'pri_man.validate-carrier-empty': 'Carrier shouldn’t be empty',
    'pri_man.validate-customer-empty': 'Customer shouldn’t be empty',
    'pri_man.validate-category-empty': 'Category shouldn’t be empty',
    'pri_man.validate-status-empty': 'Status shouldn’t be empty',
    'pri_man.validate-service-empty': 'Service shouldn’t be empty',
    'pri_man.validate-shipment_type-empty': 'Shipment Type shouldn’t be empty',
    'pri_man.validate-origin_country-empty': 'Origin Country shouldn’t be empty',
    'pri_man.validate-destination_country-empty': 'Destination Country shouldn’t be empty',
    'pri_man.validate-origin_city-empty': 'Origin City shouldn’t be empty',
    'pri_man.validate-destination_city-empty': 'Destination City shouldn’t be empty',
    //master-data --- RangeWeight
    'range_weight.list-title': 'Range Weight',
    'range_weight.add-new': 'Add New Range Weight',
    'range_weight.add': 'Add New Range Weight',
    'range_weight.view': 'View Range Weight',
    'range_weight.update': 'Update Range Weight',
    'range_weight.delete': 'Delete Range Weight',
    'range_weight.type': 'RangeWeight Type',
    'range_weight.name': 'Range Weight Name',
    'range_weight.calculate': 'Calculate Unit',
    'range_weight.unit': 'Unit',
    'range_weight.roundup': 'Round Up',
    'range_weight.add-success': 'You have added a range weight!',
    'range_weight.update-success': 'You have modified range weight!',
    'range_weight.delete-success': 'You have deleted range weight!',
    //validate
   
    'range_weight.validate-code-empty': 'Name shouldn’t be empty',
    'range_weight.validate-code-minlength': 'Name must be 5 characters or more',
    'range_weight.validate-code-maxlength': 'Name must be 20 characters or less',
    'range_weight.validate-code-exists': 'Name already exists',
    'range_weight.validate-from-empty' : 'From Type shouldn’t be empty',
    'range_weight.validate-to-empty' : 'To Type shouldn’t be empty',
    'range_weight.validate-calculate_unit-empty' : 'Calculate Unit Type shouldn’t be empty',
    'range_weight.validate-unit-empty' : 'Unit Type shouldn’t be empty',
    'range_weight.validate-round_up-empty' : 'Round Up Type shouldn’t be empty',

    //master-data --- ZoneCode
    'zone_code.list-title': 'Zone Code',
    'zone_code.add-new': 'Add New Zone Code',
    'zone_code.add': 'Add New Zone Code',
    'zone_code.view': 'View Zone Code',
    'zone_code.name': 'Zone Code Name',
    'zone_code.update': 'Update Zone Code',
    'zone_code.delete': 'Delete Cone Code',
    'zone_code.type': 'Zone Type',
    'zone_code.code': 'Zone Code',
    'zone_code.calculate': 'Calculate Unit',
    'zone_code.unit': 'Unit',
    'zone_code.roundup': 'Round Up',
    'zone_code.country_origin': 'Country (Origin)',
    'zone_code.city_origin': 'City (Origin)',
    'zone_code.district_origin': 'District (Origin)',
    'zone_code.ward_origin': 'Ward (Origin)',
    'zone_code.country_destination': 'Country (Destination)',
    'zone_code.city_destination': 'City (Destination)',
    'zone_code.district_destination': 'District (Destination)',
    'zone_code.ward_destination': 'Ward (Destination)',
    'zone_code.add-success': 'You have added a zone code!',
    'zone_code.update-success': 'You have modified zone code!',
    'zone_code.delete-success': 'You have deleted zone code!',
    //validate
   
    'zone_code.validate-code-empty': 'Name shouldn’t be empty',
    'zone_code.validate-code-minlength': 'Name must be 5 characters or more',
    'zone_code.validate-code-maxlength': 'Name must be 20 characters or less',
    'zone_code.validate-code-exists': 'Name already exists',

    //pricing
    'pricing.saleman': 'Saleman',
    'pricing.effected-date': 'Effected Date',
    'pricing.expired-date': 'Expired Date',
    'pricing.approved-status': 'Approved Status',
    'pricing.approved': 'Approved',
    'pricing.draft': 'Draft',
    'pricing.new': 'New',
    'pricing.approved-by': 'Approved By',
    'pricing.add-new': 'Add New Pricing',
    'pricing.edit': 'Edit Pricing',
    'pricing.view': 'View Pricing',
    'pricing.delete': 'Delete Pricing',
    'pricing.name': 'Pricing Name',
    'pricing.master-data': 'Master Data',
    'pricing.transportation': 'Pricing: Transportation',
    'pricing.value-services': 'Pricing: Value - Adding Services',
    'pricing.normal': 'Normal',
    'pricing.range': 'Range',
    'pricing.type': 'Type',
    'pricing.value': 'Value',
    'pricing.minimun-value': 'Minimum Value',

    //validate
    'pricing.validate-saleman-empty': 'Saleman shouldn’t be empty',
    'pricing.validate-effected-date-empty': 'Effected date shouldn’t be empty',
    'pricing.validate-expired-date-empty': 'Expired date shouldn’t be empty',
    'pricing.validate-expired-date-lesser': 'Expired date must not be less than expired date',
    'pricing.validate-origin-country-empty': 'Country shouldn’t be empty',
    'pricing.validate-origin-city-empty': 'City shouldn’t be empty',
    'pricing.validate-approved-by-empty': 'Approved by shouldn’t be empty',

    //COD
    'pricing.cod' : 'Pricing Cod',
    'pricing.internal_city': 'Internal City',
    'pricing.internal_city_ras': 'Internal City Ras',
    'pricing.external_city' :'External City',
    'pricing.external_city_ras' :'External City Ras',
    'pricing.from' :'From',
    'pricing.to' :'To',
    'pricing.price': 'Price',
  }